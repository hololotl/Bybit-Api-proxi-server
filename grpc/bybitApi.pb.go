// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.6
// source: bybitApi.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SpotAccountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	PublicApi     string                 `protobuf:"bytes,2,opt,name=PublicApi,proto3" json:"PublicApi,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpotAccountRequest) Reset() {
	*x = SpotAccountRequest{}
	mi := &file_bybitApi_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpotAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpotAccountRequest) ProtoMessage() {}

func (x *SpotAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bybitApi_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpotAccountRequest.ProtoReflect.Descriptor instead.
func (*SpotAccountRequest) Descriptor() ([]byte, []int) {
	return file_bybitApi_proto_rawDescGZIP(), []int{0}
}

func (x *SpotAccountRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SpotAccountRequest) GetPublicApi() string {
	if x != nil {
		return x.PublicApi
	}
	return ""
}

type SpotAccountResponse struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	AccountImRate          string                 `protobuf:"bytes,1,opt,name=account_im_rate,json=accountImRate,proto3" json:"account_im_rate,omitempty"`
	AccountLtv             string                 `protobuf:"bytes,2,opt,name=account_ltv,json=accountLtv,proto3" json:"account_ltv,omitempty"`
	AccountMmRate          string                 `protobuf:"bytes,3,opt,name=account_mm_rate,json=accountMmRate,proto3" json:"account_mm_rate,omitempty"`
	AccountType            string                 `protobuf:"bytes,4,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
	Coins                  []*Coin                `protobuf:"bytes,5,rep,name=coins,proto3" json:"coins,omitempty"`
	TotalAvailableBalance  string                 `protobuf:"bytes,6,opt,name=total_available_balance,json=totalAvailableBalance,proto3" json:"total_available_balance,omitempty"`
	TotalEquity            string                 `protobuf:"bytes,7,opt,name=total_equity,json=totalEquity,proto3" json:"total_equity,omitempty"`
	TotalInitialMargin     string                 `protobuf:"bytes,8,opt,name=total_initial_margin,json=totalInitialMargin,proto3" json:"total_initial_margin,omitempty"`
	TotalMaintenanceMargin string                 `protobuf:"bytes,9,opt,name=total_maintenance_margin,json=totalMaintenanceMargin,proto3" json:"total_maintenance_margin,omitempty"`
	TotalMarginBalance     string                 `protobuf:"bytes,10,opt,name=total_margin_balance,json=totalMarginBalance,proto3" json:"total_margin_balance,omitempty"`
	TotalPerpUpl           string                 `protobuf:"bytes,11,opt,name=total_perp_upl,json=totalPerpUpl,proto3" json:"total_perp_upl,omitempty"`
	TotalWalletBalance     string                 `protobuf:"bytes,12,opt,name=total_wallet_balance,json=totalWalletBalance,proto3" json:"total_wallet_balance,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SpotAccountResponse) Reset() {
	*x = SpotAccountResponse{}
	mi := &file_bybitApi_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpotAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpotAccountResponse) ProtoMessage() {}

func (x *SpotAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bybitApi_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpotAccountResponse.ProtoReflect.Descriptor instead.
func (*SpotAccountResponse) Descriptor() ([]byte, []int) {
	return file_bybitApi_proto_rawDescGZIP(), []int{1}
}

func (x *SpotAccountResponse) GetAccountImRate() string {
	if x != nil {
		return x.AccountImRate
	}
	return ""
}

func (x *SpotAccountResponse) GetAccountLtv() string {
	if x != nil {
		return x.AccountLtv
	}
	return ""
}

func (x *SpotAccountResponse) GetAccountMmRate() string {
	if x != nil {
		return x.AccountMmRate
	}
	return ""
}

func (x *SpotAccountResponse) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *SpotAccountResponse) GetCoins() []*Coin {
	if x != nil {
		return x.Coins
	}
	return nil
}

func (x *SpotAccountResponse) GetTotalAvailableBalance() string {
	if x != nil {
		return x.TotalAvailableBalance
	}
	return ""
}

func (x *SpotAccountResponse) GetTotalEquity() string {
	if x != nil {
		return x.TotalEquity
	}
	return ""
}

func (x *SpotAccountResponse) GetTotalInitialMargin() string {
	if x != nil {
		return x.TotalInitialMargin
	}
	return ""
}

func (x *SpotAccountResponse) GetTotalMaintenanceMargin() string {
	if x != nil {
		return x.TotalMaintenanceMargin
	}
	return ""
}

func (x *SpotAccountResponse) GetTotalMarginBalance() string {
	if x != nil {
		return x.TotalMarginBalance
	}
	return ""
}

func (x *SpotAccountResponse) GetTotalPerpUpl() string {
	if x != nil {
		return x.TotalPerpUpl
	}
	return ""
}

func (x *SpotAccountResponse) GetTotalWalletBalance() string {
	if x != nil {
		return x.TotalWalletBalance
	}
	return ""
}

type Coin struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	AccruedInterest     string                 `protobuf:"bytes,1,opt,name=accrued_interest,json=accruedInterest,proto3" json:"accrued_interest,omitempty"`
	AvailableToBorrow   string                 `protobuf:"bytes,2,opt,name=available_to_borrow,json=availableToBorrow,proto3" json:"available_to_borrow,omitempty"`
	AvailableToWithdraw string                 `protobuf:"bytes,3,opt,name=available_to_withdraw,json=availableToWithdraw,proto3" json:"available_to_withdraw,omitempty"`
	Bonus               string                 `protobuf:"bytes,4,opt,name=bonus,proto3" json:"bonus,omitempty"`
	BorrowAmount        string                 `protobuf:"bytes,5,opt,name=borrow_amount,json=borrowAmount,proto3" json:"borrow_amount,omitempty"`
	Coin                string                 `protobuf:"bytes,6,opt,name=coin,proto3" json:"coin,omitempty"`
	CollateralSwitch    bool                   `protobuf:"varint,7,opt,name=collateral_switch,json=collateralSwitch,proto3" json:"collateral_switch,omitempty"`
	CumRealisedPnl      string                 `protobuf:"bytes,8,opt,name=cum_realised_pnl,json=cumRealisedPnl,proto3" json:"cum_realised_pnl,omitempty"`
	Equity              string                 `protobuf:"bytes,9,opt,name=equity,proto3" json:"equity,omitempty"`
	Locked              string                 `protobuf:"bytes,10,opt,name=locked,proto3" json:"locked,omitempty"`
	MarginCollateral    bool                   `protobuf:"varint,11,opt,name=margin_collateral,json=marginCollateral,proto3" json:"margin_collateral,omitempty"`
	SpotHedgingQty      string                 `protobuf:"bytes,12,opt,name=spot_hedging_qty,json=spotHedgingQty,proto3" json:"spot_hedging_qty,omitempty"`
	TotalOrderIm        string                 `protobuf:"bytes,13,opt,name=total_order_im,json=totalOrderIm,proto3" json:"total_order_im,omitempty"`
	TotalPositionIm     string                 `protobuf:"bytes,14,opt,name=total_position_im,json=totalPositionIm,proto3" json:"total_position_im,omitempty"`
	TotalPositionMm     string                 `protobuf:"bytes,15,opt,name=total_position_mm,json=totalPositionMm,proto3" json:"total_position_mm,omitempty"`
	UnrealisedPnl       string                 `protobuf:"bytes,16,opt,name=unrealised_pnl,json=unrealisedPnl,proto3" json:"unrealised_pnl,omitempty"`
	UsdValue            string                 `protobuf:"bytes,17,opt,name=usd_value,json=usdValue,proto3" json:"usd_value,omitempty"`
	WalletBalance       string                 `protobuf:"bytes,18,opt,name=wallet_balance,json=walletBalance,proto3" json:"wallet_balance,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Coin) Reset() {
	*x = Coin{}
	mi := &file_bybitApi_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Coin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coin) ProtoMessage() {}

func (x *Coin) ProtoReflect() protoreflect.Message {
	mi := &file_bybitApi_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coin.ProtoReflect.Descriptor instead.
func (*Coin) Descriptor() ([]byte, []int) {
	return file_bybitApi_proto_rawDescGZIP(), []int{2}
}

func (x *Coin) GetAccruedInterest() string {
	if x != nil {
		return x.AccruedInterest
	}
	return ""
}

func (x *Coin) GetAvailableToBorrow() string {
	if x != nil {
		return x.AvailableToBorrow
	}
	return ""
}

func (x *Coin) GetAvailableToWithdraw() string {
	if x != nil {
		return x.AvailableToWithdraw
	}
	return ""
}

func (x *Coin) GetBonus() string {
	if x != nil {
		return x.Bonus
	}
	return ""
}

func (x *Coin) GetBorrowAmount() string {
	if x != nil {
		return x.BorrowAmount
	}
	return ""
}

func (x *Coin) GetCoin() string {
	if x != nil {
		return x.Coin
	}
	return ""
}

func (x *Coin) GetCollateralSwitch() bool {
	if x != nil {
		return x.CollateralSwitch
	}
	return false
}

func (x *Coin) GetCumRealisedPnl() string {
	if x != nil {
		return x.CumRealisedPnl
	}
	return ""
}

func (x *Coin) GetEquity() string {
	if x != nil {
		return x.Equity
	}
	return ""
}

func (x *Coin) GetLocked() string {
	if x != nil {
		return x.Locked
	}
	return ""
}

func (x *Coin) GetMarginCollateral() bool {
	if x != nil {
		return x.MarginCollateral
	}
	return false
}

func (x *Coin) GetSpotHedgingQty() string {
	if x != nil {
		return x.SpotHedgingQty
	}
	return ""
}

func (x *Coin) GetTotalOrderIm() string {
	if x != nil {
		return x.TotalOrderIm
	}
	return ""
}

func (x *Coin) GetTotalPositionIm() string {
	if x != nil {
		return x.TotalPositionIm
	}
	return ""
}

func (x *Coin) GetTotalPositionMm() string {
	if x != nil {
		return x.TotalPositionMm
	}
	return ""
}

func (x *Coin) GetUnrealisedPnl() string {
	if x != nil {
		return x.UnrealisedPnl
	}
	return ""
}

func (x *Coin) GetUsdValue() string {
	if x != nil {
		return x.UsdValue
	}
	return ""
}

func (x *Coin) GetWalletBalance() string {
	if x != nil {
		return x.WalletBalance
	}
	return ""
}

type FuturesTransactionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageSize      int64                  `protobuf:"varint,1,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PublicApi     string                 `protobuf:"bytes,2,opt,name=PublicApi,proto3" json:"PublicApi,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FuturesTransactionsRequest) Reset() {
	*x = FuturesTransactionsRequest{}
	mi := &file_bybitApi_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FuturesTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuturesTransactionsRequest) ProtoMessage() {}

func (x *FuturesTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bybitApi_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuturesTransactionsRequest.ProtoReflect.Descriptor instead.
func (*FuturesTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_bybitApi_proto_rawDescGZIP(), []int{3}
}

func (x *FuturesTransactionsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FuturesTransactionsRequest) GetPublicApi() string {
	if x != nil {
		return x.PublicApi
	}
	return ""
}

type FuturesTransactionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FuturesTransactionsResponse) Reset() {
	*x = FuturesTransactionsResponse{}
	mi := &file_bybitApi_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FuturesTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuturesTransactionsResponse) ProtoMessage() {}

func (x *FuturesTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bybitApi_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuturesTransactionsResponse.ProtoReflect.Descriptor instead.
func (*FuturesTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_bybitApi_proto_rawDescGZIP(), []int{4}
}

var File_bybitApi_proto protoreflect.FileDescriptor

const file_bybitApi_proto_rawDesc = "" +
	"\n" +
	"\x0ebybitApi.proto\x12\x04grpc\"J\n" +
	"\x12SpotAccountRequest\x12\x16\n" +
	"\x06UserId\x18\x01 \x01(\x03R\x06UserId\x12\x1c\n" +
	"\tPublicApi\x18\x02 \x01(\tR\tPublicApi\"\x9c\x04\n" +
	"\x13SpotAccountResponse\x12&\n" +
	"\x0faccount_im_rate\x18\x01 \x01(\tR\raccountImRate\x12\x1f\n" +
	"\vaccount_ltv\x18\x02 \x01(\tR\n" +
	"accountLtv\x12&\n" +
	"\x0faccount_mm_rate\x18\x03 \x01(\tR\raccountMmRate\x12!\n" +
	"\faccount_type\x18\x04 \x01(\tR\vaccountType\x12 \n" +
	"\x05coins\x18\x05 \x03(\v2\n" +
	".grpc.CoinR\x05coins\x126\n" +
	"\x17total_available_balance\x18\x06 \x01(\tR\x15totalAvailableBalance\x12!\n" +
	"\ftotal_equity\x18\a \x01(\tR\vtotalEquity\x120\n" +
	"\x14total_initial_margin\x18\b \x01(\tR\x12totalInitialMargin\x128\n" +
	"\x18total_maintenance_margin\x18\t \x01(\tR\x16totalMaintenanceMargin\x120\n" +
	"\x14total_margin_balance\x18\n" +
	" \x01(\tR\x12totalMarginBalance\x12$\n" +
	"\x0etotal_perp_upl\x18\v \x01(\tR\ftotalPerpUpl\x120\n" +
	"\x14total_wallet_balance\x18\f \x01(\tR\x12totalWalletBalance\"\xab\x05\n" +
	"\x04Coin\x12)\n" +
	"\x10accrued_interest\x18\x01 \x01(\tR\x0faccruedInterest\x12.\n" +
	"\x13available_to_borrow\x18\x02 \x01(\tR\x11availableToBorrow\x122\n" +
	"\x15available_to_withdraw\x18\x03 \x01(\tR\x13availableToWithdraw\x12\x14\n" +
	"\x05bonus\x18\x04 \x01(\tR\x05bonus\x12#\n" +
	"\rborrow_amount\x18\x05 \x01(\tR\fborrowAmount\x12\x12\n" +
	"\x04coin\x18\x06 \x01(\tR\x04coin\x12+\n" +
	"\x11collateral_switch\x18\a \x01(\bR\x10collateralSwitch\x12(\n" +
	"\x10cum_realised_pnl\x18\b \x01(\tR\x0ecumRealisedPnl\x12\x16\n" +
	"\x06equity\x18\t \x01(\tR\x06equity\x12\x16\n" +
	"\x06locked\x18\n" +
	" \x01(\tR\x06locked\x12+\n" +
	"\x11margin_collateral\x18\v \x01(\bR\x10marginCollateral\x12(\n" +
	"\x10spot_hedging_qty\x18\f \x01(\tR\x0espotHedgingQty\x12$\n" +
	"\x0etotal_order_im\x18\r \x01(\tR\ftotalOrderIm\x12*\n" +
	"\x11total_position_im\x18\x0e \x01(\tR\x0ftotalPositionIm\x12*\n" +
	"\x11total_position_mm\x18\x0f \x01(\tR\x0ftotalPositionMm\x12%\n" +
	"\x0eunrealised_pnl\x18\x10 \x01(\tR\runrealisedPnl\x12\x1b\n" +
	"\tusd_value\x18\x11 \x01(\tR\busdValue\x12%\n" +
	"\x0ewallet_balance\x18\x12 \x01(\tR\rwalletBalance\"V\n" +
	"\x1aFuturesTransactionsRequest\x12\x1a\n" +
	"\bpageSize\x18\x01 \x01(\x03R\bpageSize\x12\x1c\n" +
	"\tPublicApi\x18\x02 \x01(\tR\tPublicApi\"\x1d\n" +
	"\x1bFuturesTransactionsResponse2\xb2\x01\n" +
	"\fBybitService\x12Z\n" +
	"\x13FuturesTransactions\x12 .grpc.FuturesTransactionsRequest\x1a!.grpc.FuturesTransactionsResponse\x12F\n" +
	"\x0fSpotAccountInfo\x12\x18.grpc.SpotAccountRequest\x1a\x19.grpc.SpotAccountResponseB:Z8C:/Users/niyaz/GolandProjects/bybit_api_servic_grpc/grpcb\x06proto3"

var (
	file_bybitApi_proto_rawDescOnce sync.Once
	file_bybitApi_proto_rawDescData []byte
)

func file_bybitApi_proto_rawDescGZIP() []byte {
	file_bybitApi_proto_rawDescOnce.Do(func() {
		file_bybitApi_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_bybitApi_proto_rawDesc), len(file_bybitApi_proto_rawDesc)))
	})
	return file_bybitApi_proto_rawDescData
}

var file_bybitApi_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_bybitApi_proto_goTypes = []any{
	(*SpotAccountRequest)(nil),          // 0: grpc.SpotAccountRequest
	(*SpotAccountResponse)(nil),         // 1: grpc.SpotAccountResponse
	(*Coin)(nil),                        // 2: grpc.Coin
	(*FuturesTransactionsRequest)(nil),  // 3: grpc.FuturesTransactionsRequest
	(*FuturesTransactionsResponse)(nil), // 4: grpc.FuturesTransactionsResponse
}
var file_bybitApi_proto_depIdxs = []int32{
	2, // 0: grpc.SpotAccountResponse.coins:type_name -> grpc.Coin
	3, // 1: grpc.BybitService.FuturesTransactions:input_type -> grpc.FuturesTransactionsRequest
	0, // 2: grpc.BybitService.SpotAccountInfo:input_type -> grpc.SpotAccountRequest
	4, // 3: grpc.BybitService.FuturesTransactions:output_type -> grpc.FuturesTransactionsResponse
	1, // 4: grpc.BybitService.SpotAccountInfo:output_type -> grpc.SpotAccountResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_bybitApi_proto_init() }
func file_bybitApi_proto_init() {
	if File_bybitApi_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_bybitApi_proto_rawDesc), len(file_bybitApi_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bybitApi_proto_goTypes,
		DependencyIndexes: file_bybitApi_proto_depIdxs,
		MessageInfos:      file_bybitApi_proto_msgTypes,
	}.Build()
	File_bybitApi_proto = out.File
	file_bybitApi_proto_goTypes = nil
	file_bybitApi_proto_depIdxs = nil
}
